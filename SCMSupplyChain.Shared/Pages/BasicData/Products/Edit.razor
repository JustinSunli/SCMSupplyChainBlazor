@page "/BasicData/Products/Edit/{id}"
@using SCMSupplyChain.ViewModel.BasicData.ProductsVMs;
@inherits BasePage

<ValidateForm @ref="vform" Model="@Model" OnValidSubmit="@Submit">
    <Row ItemsPerRow="ItemsPerRow.Two" RowType="RowType.FormRow">

            <BootstrapInputNumber @bind-Value="@Model.Entity.ProMax"  />
            <BootstrapInputNumber @bind-Value="@Model.Entity.ProMin"  />
            <BootstrapInput @bind-Value="@Model.Entity.ProdName"  />
            <BootstrapInput @bind-Value="@Model.Entity.ProWorkShop"  />
            <WTUploadImage @bind-Value="@Model.Entity.PhotoId"  />
            <BootstrapInputNumber @bind-Value="@Model.Entity.ProInPrice"  />
            <BootstrapInputNumber @bind-Value="@Model.Entity.ProPrice"  />
            <BootstrapInput @bind-Value="@Model.Entity.ProDesc"  />
    </Row>
    <div class="modal-footer table-modal-footer">
        <Button Color="Color.Primary" Icon="fa fa-save" Text="@WtmBlazor.Localizer["Sys.Close"]" OnClick="OnClose" />
        <Button Color="Color.Primary" ButtonType="ButtonType.Submit" Icon="fa fa-save" Text="@WtmBlazor.Localizer["Sys.Edit"]" IsAsync="true" />
    </div>
</ValidateForm>

@code {

    private ProductsVM Model = new ProductsVM();
    private ValidateForm vform { get; set; }
    [Parameter]
    public string id { get; set; }


    protected override async Task OnInitializedAsync()
    {

        var rv = await WtmBlazor.Api.CallAPI<ProductsVM>($"/api/Products/{id}");
        Model = rv.Data;
         await base.OnInitializedAsync();
   }

    private async Task Submit(EditContext context)
    {
        await PostsForm(vform, $"/api/Products/edit", (s) => "Sys.OprationSuccess", method: HttpMethodEnum.PUT);
    }

    public void OnClose()
    {
        CloseDialog();
    }

}
